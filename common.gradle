apply plugin: 'artifactory'

configurations {
    codeCoverage
    codeCoverageAnt
}

repositories {
    repositories {
        maven {
            url 'http://artifactory.office/artifactory/plugins-dev'
        }
        maven {
            url 'http://artifactory.office/artifactory/plugins-release'
        }
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
	    ivy {
		    url "http://artifactory.office/artifactory/simple/services-release"
		    layout "pattern", {
			    artifact "[organization]/[revision]/[module]/[artifact]-[revision](-[suffix]).[ext]"
		    }
	    }
	    ivy {
            url "http://artifactory.office/artifactory/simple/services-dev"
            layout "pattern", {
                artifact "[organization]/[module]/[revision]/[artifact]-[revision](-[suffix]).[ext]"
            }
        }
        ivy {
            url "http://artifactory.office/artifactory/simple/services-release"
            layout "pattern", {
                artifact "[organization]/[module]/[revision]/[artifact]-[revision](-[suffix]).[ext]"
            }
        }
    }
}

artifactory {
    publish {
        contextUrl = 'http://artifactory.office/artifactory'   //The base Artifactory URL for the publisher
        repository {
            repoKey = 'services-release'//The Artifactory repository key to publish to
            if (project.ext.isDevBuild) {
                repoKey = 'services-dev'
            }
            username = 'build'          //The publisher user name
            password = 'P4ssw0rd'       //The publisher password
            ivy {
                ivyLayout = '[organization]/[module]/[revision]/ivy-[revision].xml'
                artifactLayout = '[organization]/[module]/[revision]/[artifact]-[revision](-[suffix]).[ext]'
                mavenCompatible = false //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
            }
        }
        defaults {
            def cc = 'publish'
            if (project.ext.isDevBuild) {
                cc = 'publishDev'
            }
            publishConfigs(cc)
            publishBuildInfo = true
            publishArtifacts = true
            publishPom = false
        }
    }
}

jacocoTestReport {
    reports {
        html.enabled = true
        csv.enabled = false
        xml.enabled = true
    }
}
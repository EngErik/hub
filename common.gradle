apply plugin: 'artifactory'

configurations {
    codeCoverage
    codeCoverageAnt
}

dependencies {

    codeCoverage 'org.jacoco:org.jacoco.agent:0.5.10.201208310627:runtime@jar'
    codeCoverageAnt 'org.jacoco:org.jacoco.ant:0.5.10.201208310627'

}

repositories {
    repositories {
        maven {
            url 'http://artifactory.office/artifactory/plugins-dev'
        }
        maven {
            url 'http://artifactory.office/artifactory/plugins-release'
        }
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
        ivy {
            url "http://artifactory.office/artifactory/simple/services-dev"
            layout "pattern", {
                artifact "[organization]/[module]/[revision]/[artifact]-[revision](-[suffix]).[ext]"
            }
        }
        ivy {
            url "http://artifactory.office/artifactory/simple/services-release"
            layout "pattern", {
                artifact "[organization]/[module]/[revision]/[artifact]-[revision](-[suffix]).[ext]"
            }
        }
    }
}


artifactory {
    publish {
        contextUrl = 'http://artifactory.office/artifactory'   //The base Artifactory URL for the publisher
        repository {
            repoKey = 'services-release'//The Artifactory repository key to publish to
            if (project.ext.isDevBuild) {
                repoKey = 'services-dev'
            }
            username = 'build'          //The publisher user name
            password = 'P4ssw0rd'       //The publisher password
            ivy {
                ivyLayout = '[organization]/[module]/[revision]/ivy-[revision].xml'
                artifactLayout = '[organization]/[module]/[revision]/[artifact]-[revision](-[suffix]).[ext]'
                mavenCompatible = false //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
            }
        }
        defaults {
            def cc = 'publish'
            if (project.ext.isDevBuild) {
                cc = 'publishDev'
            }
            publishConfigs(cc)
            publishBuildInfo = true
            publishArtifacts = true
            publishPom = false
        }
    }
}

test {
    systemProperties = System.properties
    jvmArgs "-javaagent:${configurations.codeCoverage.asPath}=destfile=${project.buildDir.path}/coverage-results/jacoco.exec,sessionid=HSServ,append=false",
            '-Djacoco=true',
            '-Xms128m',
            '-Xmx512m',
            '-XX:MaxPermSize=128m'
}

// From: http://www.zorched.net/2012/09/13/java-7-code-coverage-with-gradle-and-jacoco/
task generateCoverageReport << {
    ant {
        taskdef(name: 'jacocoreport', classname: 'org.jacoco.ant.ReportTask', classpath: configurations.codeCoverageAnt.asPath)

        mkdir dir: "build/reports/coverage"

        jacocoreport {
            executiondata {
                fileset(dir: "build/coverage-results") {
                    include name: 'jacoco.exec'
                }
            }
            structure(name: project.name) {
                classfiles {
                    fileset(dir: "build/classes/main") {
                    }
                }
                sourcefiles(encoding: 'UTF-8') {
                    fileset dir: "src/main/java"
                }
            }

            xml destfile: "build/reports/coverage/jacoco.xml"
            html destdir: "build/reports/coverage"
        }
    }
}
import groovyx.net.http.RESTClient

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'jacoco'
apply from: 'http://artifactory.office/artifactory/simple/services-dev/com.flightstats/gradle/1.0.1/common-utils-1.0.1.gradle'

sourceCompatibility = 1.7
targetCompatibility = 1.7

project.ext.jenkinsBuildNumber = "$System.env.VERSION_NUMBER"
project.ext.jenkinsJobName = "hub"

group = 'com.flightstats'

version = project.ext.jenkinsBuildNumber
//todo - gfm - 3/20/14 - have the local build just use local-full time stamp

project.ext.isDevBuild = !project.ext.properties.containsKey("buildConfig") || !"release".equals(project.ext.buildConfig)

apply from: 'http://artifactory.office/artifactory/simple/services-dev/com.flightstats/gradle/1.0.1/common-1.0.1.gradle'

println "Building version: ${version}"

buildDir = 'build'

mainClassName = "com.flightstats.hub.app.HubMain"

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://repo.jfrog.org/artifactory/gradle-plugins' }
    }

    dependencies {
        classpath(
                [group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '2.0.16'],
                [group: 'org.codehaus.groovy.modules.http-builder', name:'http-builder', version: '0.7']
        )
    }
}

configurations {
    all*.exclude(group: 'org.slf4j', module: 'slf4j-log4j12')
    publish
    publishDev
    integrationTests
}

dependencies {
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty', name: 'jetty-http', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty', name: 'jetty-io', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty', name: 'jetty-security', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty.websocket', name: 'websocket-server', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty.websocket', name: 'websocket-common', version: '9.1.1.v20140108'
    compile group: 'org.eclipse.jetty.websocket', name: 'javax-websocket-client-impl', version: '9.1.1.v20140108'
    //todo upgrade these to latest jersey from glassfish
    compile group: 'com.sun.jersey', name: 'jersey-core', version: '1.17.1'
    compile group: 'com.sun.jersey', name: 'jersey-json', version: '1.17.1'
    compile group: 'com.sun.jersey', name: 'jersey-servlet', version: '1.17.1'
    compile group: 'com.sun.jersey', name: 'jersey-server', version: '1.17.1'
    compile group: 'com.sun.jersey.contribs', name: 'jersey-guice', version: '1.17'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.2.+'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.2.+'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.2.+'
    compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.2.+'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.2.+'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compile group: 'javax.ws.rs', name: 'jsr311-api', version: '1.1.1'
    compile group: 'asm', name: 'asm', version: '3.3.1'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.8'
    compile group: 'org.glassfish', name: 'javax.servlet', version: '3.0'
    compile group: 'com.google.inject', name: 'guice', version: '3.0'
    compile group: 'com.google.inject.extensions', name: 'guice-servlet', version: '3.0'
    compile group: 'com.google.guava', name: 'guava', version: '13.0'
    compile group: 'joda-time', name: 'joda-time', version: '2.1'
    compile group: "org.hamcrest", name: "hamcrest-core", version: "1.3"
    compile group: "ch.qos.logback", name: "logback-core", version: "1.0.13"
    compile group: "ch.qos.logback", name: "logback-classic", version: "1.0.13"
    compile group: "org.slf4j", name: "slf4j-api", version: "1.7.2"
    compile group: "org.slf4j", name: "jul-to-slf4j", version: "1.7.2"
    compile group: "com.codahale.metrics", name: "metrics-core", version: "3.0.1"
    compile group: "com.codahale.metrics", name: "metrics-graphite", version: "3.0.1"
    compile group: "com.codahale.metrics", name: "metrics-servlets", version: "3.0.1"
    compile group: "com.codahale.metrics", name: "metrics-jersey", version: "3.0.1"
    compile group: "com.codahale.metrics", name: "metrics-logback", version: "3.0.1"
    compile group: "com.codahale.metrics", name: "metrics-jvm", version: "3.0.1"
    compile 'com.codahale.metrics:metrics-jetty9:3.0.1'
    compile group: "com.hazelcast", name: "hazelcast", version: "3.1.1"
    compile group: "com.hazelcast", name: "hazelcast-client", version: "3.1.1"
    compile group: "com.flightstats.common", name: "util", version: "3.+"
    compile group: "com.flightstats.common", name: "jaxb", version: "3.+"
    compile group: "com.flightstats.common", name: "rest", version: "3.+"
    compile group: "com.flightstats.common", name: "jerseyguice", version: "3.+"
    compile group: 'com.intellij', name: 'annotations', version: '7.0.3'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.9-RC1'
    compile 'com.amazonaws:aws-java-sdk:1.7.1'
    compile 'org.apache.curator:curator-recipes:2.3.0'
    compile 'org.apache.commons:commons-lang3:3.2.1'
    compile 'com.github.rholder:guava-retrying:1.0.5'

    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile group: "org.mockito", name: "mockito-all", version: "1.9.5"
    //this version of snappy is to fix a bug in startup of cassandraunit
    testCompile group: 'org.xerial.snappy', name: 'snappy-java', version: '1.0.5'
    compile group: 'com.sun.jersey', name: 'jersey-client', version: '1.17.1'
    testCompile 'org.apache.curator:curator-test:2.3.0'

}

distTar {
    compression = Compression.GZIP
}

applicationDistribution.from('README.md') {
    into "doc"
}

applicationDistribution.from('triforce') {
    into "triforce"
}

task jasmineTests << {
    def testdir = "${projectDir}/src/test/integration"
    def reportsdir = "${projectDir}/build/reports/integration/"
    println "Making " + reportsdir
    new File(reportsdir).mkdirs()
    runExternal("jasmine-node --forceexit --captureExceptions --junitreport --output ${reportsdir} ${testdir}")
}

task startHub (type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    args 'useDefault'
    //todo - gfm - 2/11/14 - look at piping output elsewhere
}

task startMemoryHub (type: JavaExec) {
    main = 'com.flightstats.hub.app.MemoryHubMain'
    classpath = sourceSets.test.runtimeClasspath
    //todo - gfm - 2/11/14 - look at piping output elsewhere
}

def startTaskAndWait = { startTask, url ->
    println "starting hub"
    Thread.start({ startTask.execute() })

    println 'waiting for hub to start'
    def client = new RESTClient(url)

    health = {
        try {
            return client.head(path : 'health').status
        } catch (any) {
            println any
            return 500
        }
    }
    while (health() != 200) {
        //todo - gfm - 2/11/14 - fail this if it happens too many times
        sleep 1000
    }
    println('hub started!')
}

task startHubAsync (dependsOn: classes ) << {
    startTaskAndWait(startHub, 'http://localhost:9080/')
}

task startMemoryHubAsync (dependsOn: testClasses ) << {
    startTaskAndWait(startMemoryHub, 'http://localhost:9999/')
}

task integrationTests (dependsOn: [startHubAsync, startMemoryHubAsync, jasmineTests]) << { }

jasmineTests.mustRunAfter startHubAsync
jasmineTests.mustRunAfter startMemoryHubAsync

task startReplicationVerifierStaging (dependsOn: testClasses ) << {
    //todo - gfm - 4/3/14 - may want to pass in args via JZ comment here -
    // http://forums.gradle.org/gradle/topics/how_can_i_provide_command_line_args_to_application_started_with_gradle_run
    verifierExec.args = ["http://hub.svc.staging/", "1", "10"].toList()
    verifierExec.execute()
}

task verifierExec (type: JavaExec ) {
    main = 'com.flightstats.hub.replication.ReplicationVerifier'
    classpath = sourceSets.test.runtimeClasspath
}


#valid values are currently "aws"
backing.store={{ backing['store'] }}

aws.protocol={{ aws['protocol'] }}

dynamo.endpoint={{ dynamo['endpoint'] }}
dynamo.table_creation_wait_minutes={{ dynamo['table_creation_wait_minutes'] }}

app.name={{ app['name'] }}
app.environment={{ app['environment'] }}
app.encrypted={{ app['encrypted'] }}
app.lib_path=/home/hub/hub/lib/

#how long is the delay to get out of the load balancer's rotation?
app.shutdown_delay_seconds={{ app['shutdown_delay_seconds']}}

#how long should we wait for the app to shutdown?
app.shutdown_wait_seconds={{ app['shutdown_wait_seconds']}}

s3.content_backoff_wait= {{ s3['content_backoff_wait'] }}
s3.content_backoff_times= {{ s3['content_backoff_times'] }}
s3.environment={{ s3['environment'] }}
s3.endpoint={{ s3['endpoint'] }}

audit.threads={{ audit['threads'] }}
audit.queue={{ audit['queue'] }}

zookeeper.connection={{ zookeeper['connection'] }}
zookeeper.cfg=/home/hub/hub/conf/zoo.cfg

hazelcast.conf.xml=/home/hub/hub/conf/hazelcast.conf.xml

#http.bind_interfaces=lo,en0
http.bind_port=8080
http.idle_timeout=30000
http.bind_ip=0.0.0.0

graphite.enable={{ graphite['enable'] }}
graphite.registerJvmMetrics={{ graphite['registerJvmMetrics'] }}
graphite.host={{ graphite['host'] }}
graphite.port={{ graphite['port'] }}
graphite.prefix={{ graphite['prefix'] }}
graphite.rateSeconds={{ graphite['rateSeconds'] }}

influx.enable={{ influx['enable'] }}
influx.registerJvmMetrics={{ influx['registerJvmMetrics'] }}
influx.hosts={{ influx['hosts'] }}
influx.prefix={{ app['name'] }}
influx.database={{ app['name'] }}_{{ app['environment'] }}
influx.user={{ app['name'] }}
influx.password={{ influx['password'] }}
influx.rateSeconds={{ influx['rateSeconds'] }}


